// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnionDlx.SolPwr.Persistence;

#nullable disable

namespace OnionDlx.SolPwr.Migrations
{
    [DbContext(typeof(UtilitiesContext))]
    partial class UtilitiesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("spa")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnionDlx.SolPwr.BusinessObjects.PowerGenerationRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PowerGenerated")
                        .HasColumnType("float");

                    b.Property<Guid?>("PowerPlantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UtcTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PowerPlantId");

                    b.ToTable("GenerationHistory", "spa");
                });

            modelBuilder.Entity("OnionDlx.SolPwr.BusinessObjects.PowerPlant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlantName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double>("PowerCapacity")
                        .HasColumnType("float");

                    b.Property<DateTime>("UtcInstallDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PowerPlants", "spa");
                });

            modelBuilder.Entity("OnionDlx.SolPwr.BusinessObjects.PowerGenerationRecord", b =>
                {
                    b.HasOne("OnionDlx.SolPwr.BusinessObjects.PowerPlant", "PowerPlant")
                        .WithMany("GenerationRecords")
                        .HasForeignKey("PowerPlantId");

                    b.Navigation("PowerPlant");
                });

            modelBuilder.Entity("OnionDlx.SolPwr.BusinessObjects.PowerPlant", b =>
                {
                    b.OwnsOne("OnionDlx.SolPwr.Data.GeoCoordinate", "Location", b1 =>
                        {
                            b1.Property<Guid>("PowerPlantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float")
                                .HasColumnName("Latitude");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float")
                                .HasColumnName("Longitude");

                            b1.HasKey("PowerPlantId");

                            b1.ToTable("PowerPlants", "spa");

                            b1.WithOwner()
                                .HasForeignKey("PowerPlantId");
                        });

                    b.Navigation("Location")
                        .IsRequired();
                });

            modelBuilder.Entity("OnionDlx.SolPwr.BusinessObjects.PowerPlant", b =>
                {
                    b.Navigation("GenerationRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
